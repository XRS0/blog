#!/bin/bash
set -e

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ Blog Microservices..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ protoc
if ! command -v protoc &> /dev/null; then
    echo "‚ùå protoc –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ protoc..."
    if [ -f "./install-protoc.sh" ]; then
        ./install-protoc.sh
    else
        echo "‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç install-protoc.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ protoc –≤—Ä—É—á–Ω—É—é:"
        echo "  macOS: brew install protobuf"
        echo "  Linux: sudo apt install -y protobuf-compiler"
        exit 1
    fi
else
    echo "‚úÖ protoc –Ω–∞–π–¥–µ–Ω: $(protoc --version)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Go –ø–ª–∞–≥–∏–Ω–æ–≤
GOPATH=$(go env GOPATH)
if [ ! -f "$GOPATH/bin/protoc-gen-go" ] || [ ! -f "$GOPATH/bin/protoc-gen-go-grpc" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Go –ø–ª–∞–≥–∏–Ω–æ–≤ –¥–ª—è protoc..."
    go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
    echo "‚úÖ Go –ø–ª–∞–≥–∏–Ω—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚úÖ Go –ø–ª–∞–≥–∏–Ω—ã –Ω–∞–π–¥–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PATH
if ! command -v protoc-gen-go &> /dev/null; then
    echo "‚ö†Ô∏è  protoc-gen-go –Ω–µ –≤ PATH"
    echo "–î–æ–±–∞–≤—å—Ç–µ –≤ ~/.zshrc –∏–ª–∏ ~/.bashrc:"
    echo "export PATH=\"\$PATH:\$(go env GOPATH)/bin\""
    echo ""
    echo "–í—Ä–µ–º–µ–Ω–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ PATH –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏..."
    export PATH="$PATH:$GOPATH/bin"
fi

echo ""
echo "üî® –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö proto —Ñ–∞–π–ª–æ–≤..."
make clean

echo ""
echo "üî® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è proto —Ñ–∞–π–ª–æ–≤..."
make proto

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
EXPECTED_FILES=12
ACTUAL_FILES=$(find services -name "*.pb.go" -o -name "*_grpc.pb.go" | wc -l | tr -d ' ')

if [ "$ACTUAL_FILES" -eq "$EXPECTED_FILES" ]; then
    echo "‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ $ACTUAL_FILES —Ñ–∞–π–ª–æ–≤ (–æ–∂–∏–¥–∞–ª–æ—Å—å $EXPECTED_FILES)"
else
    echo "‚ö†Ô∏è  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ $ACTUAL_FILES —Ñ–∞–π–ª–æ–≤ (–æ–∂–∏–¥–∞–ª–æ—Å—å $EXPECTED_FILES)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–∏—à–Ω–∏–µ –ø–∞–ø–∫–∏ proto/
if find services -path "*/proto/proto" | grep -q .; then
    echo "‚ùå –ù–∞–π–¥–µ–Ω—ã –ª–∏—à–Ω–∏–µ –ø–∞–ø–∫–∏ proto/ –≤–Ω—É—Ç—Ä–∏ proto/"
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É:"
    find services -path "*/proto/proto"
else
    echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è (–Ω–µ—Ç –ª–∏—à–Ω–∏—Ö proto/)"
fi

echo ""
echo "üìö –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ —Å–µ—Ä–≤–∏—Å–∞—Ö..."
for service in auth-service article-service stats-service api-gateway; do
    echo "  - $service"
    (cd "services/$service" && go mod tidy)
done

echo ""
echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: docker-compose up --build"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–¥–æ—Ä–æ–≤—å–µ: curl http://localhost:8080/health"
echo "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ API: —Å–º. QUICKSTART.md"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "  - README.md - –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
echo "  - QUICKSTART.md - –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç"
echo "  - PROTO_CHEATSHEET.md - –®–ø–∞—Ä–≥–∞–ª–∫–∞ –ø–æ proto"
echo "  - PROTO_STRUCTURE_EXPLAINED.md - –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"
